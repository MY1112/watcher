{"version":3,"file":"bundle.js","sources":["../src/Dep.js","../src/Watcher.js","index.js"],"sourcesContent":["import Dep from './Dep'\n\nclass Dep {\n  constructor() {\n    this.subscribers = []\n  }\n  depend(target) {\n    if (target && !this.subscribers.includes(target)) {\n      this.subscribers.push(target)\n    }\n  }\n  notify(data) {\n    this.subscribers.forEach(callback => {\n      callback(data)\n    })\n  }\n}\n\nexport default Dep","import Dep from './Dep'\n\nclass Watcher {\n  constructor(data) {\n    this.target = null\n    let self = this\n    let deps = new Map()\n    let handler = {\n      get(obj, key, receiver) {\n        if (typeof obj[key] === 'object' && obj[key] !== null) {\n          return new Proxy(obj[key], handler)\n        }\n        deps.get(key).depend(self.target)\n        return Reflect.get(obj, key, receiver)\n      },\n      set(obj, key, newValue, receiver) {\n        obj[key] = newValue\n        deps.get(key).notify(obj)\n        return Reflect.set(obj, key, newValue, receiver)\n      }\n    }\n    Object.keys(data).forEach(key => {\n      deps.set(key, new Dep())\n    })\n    this.data = new Proxy(data, {\n      get(obj, key) {\n        deps.get(key).depend(self.target)\n        return obj[key]\n      },\n      set(obj, key, newValue) {\n        obj[key] = newValue\n        deps.get(key).notify(obj)\n        return true\n      }\n    })\n  }\n  event(func) {\n    this.target = func\n    this.target(this.data)\n    this.target = null\n  }\n}\n\nexport default Watcher","import Watcher from '../src/index'\n\nlet data = { name: 'sam', age: 18, BWH: [1, 2, 3] }\nlet watcher = new Watcher(data)\nwatcher.event(function (data) {\n  let info = `${data.name} is ${data.age}`\n  console.log(info)\n})\nwatcher.event(function (data) {\n  console.log('age ' + data.age)\n  console.log('BWH ' + data.BWH)\n})\n\ndocument.querySelector('#button').addEventListener('click', function () {\n  watcher.data.age += 1\n  watcher.data.BWH[0] = Math.random()\n})"],"names":["Dep"],"mappings":";;;EAEA,MAAMA,MAAG,CAAC;EACV,EAAE,WAAW,GAAG;EAChB,IAAI,IAAI,CAAC,WAAW,GAAG,GAAE;EACzB,GAAG;EACH,EAAE,MAAM,CAAC,MAAM,EAAE;EACjB,IAAI,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;EACtD,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAC;EACnC,KAAK;EACL,GAAG;EACH,EAAE,MAAM,CAAC,IAAI,EAAE;EACf,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,IAAI;EACzC,MAAM,QAAQ,CAAC,IAAI,EAAC;EACpB,KAAK,EAAC;EACN,GAAG;EACH,CAAC;;ECdD,MAAM,OAAO,CAAC;EACd,EAAE,WAAW,CAAC,IAAI,EAAE;EACpB,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;EACtB,IAAI,IAAI,IAAI,GAAG,KAAI;EACnB,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAE;AACxB,EAcA,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI;EACrC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAIA,MAAG,EAAE,EAAC;EAC9B,KAAK,EAAC;EACN,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE;EAChC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE;EACpB,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAC;EACzC,QAAQ,OAAO,GAAG,CAAC,GAAG,CAAC;EACvB,OAAO;EACP,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE;EAC9B,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,SAAQ;EAC3B,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,EAAC;EACjC,QAAQ,OAAO,IAAI;EACnB,OAAO;EACP,KAAK,EAAC;EACN,GAAG;EACH,EAAE,KAAK,CAAC,IAAI,EAAE;EACd,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;EACtB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAC;EAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;EACtB,GAAG;EACH,CAAC;;ECvCD,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAE;EACnD,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,EAAC;EAC/B,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE;EAC9B,EAAE,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,EAAC;EAC1C,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC;EACnB,CAAC,EAAC;EACF,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE;EAC9B,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAC;EAChC,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAC;EAChC,CAAC,EAAC;;EAEF,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY;EACxE,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,EAAC;EACvB,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAE;EACrC,CAAC;;;;"}